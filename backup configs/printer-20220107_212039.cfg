# This file contains common pin mappings for MKS Robin Nano (v1.2.004)
# boards. To use this config, the firmware should be compiled for the
# STM32F103. When running "make menuconfig", enable "extra low-level
# configuration setup", select the 28KiB bootloader, disable "USB for
# communication", and select USART3 for the "Serial Port".

# Note that the "make flash" command does not work with MKS Robin
# boards. After running "make", run the following command:
#   ./scripts/update_mks_robin.py out/klipper.bin out/Robin_nano.bin
# Copy the file out/Robin_nano.bin to an SD card and then restart the
# printer with that SD card.

# See the example.cfg file for a description of available parameters.

[include macros/*.cfg]

[virtual_sdcard]
path: ~/gcode_files

[screws_tilt_adjust]
screw1: -6, 22
screw1_name: front left screw
screw2: 124, 22
screw2_name: front right screw
screw3: 124, 148
screw3_name: rear right screw
screw4: -6, 148
screw4_name: rear left screw
horizontal_move_z: 16.
speed: 50.
screw_thread: CW-M3

[bltouch]
sensor_pin: PA11
control_pin: PA8
x_offset: 28
y_offset: 2
#z_offset: 5.45
pin_move_time: 0.5

[bed_mesh]
speed: 300
horizontal_move_z: 7
mesh_min: 22,17
mesh_max: 163,163
fade_start: 0.6
fade_end: 10.0
probe_count: 6,5
algorithm: bicubic
relative_reference_index: 15

[gcode_macro G29]
gcode:
    G28
    G1 Z10 F600
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=default

[safe_z_home]
home_xy_position: 67,85 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

#[input_shaper]
#shaper_freq_x: 33.5
#shaper_freq_y: 42.1
#shaper_type: mzv

[input_shaper]
shaper_freq_x: 83.51
shaper_freq_y: 59.63
shaper_type: ei

[stepper_x]
step_pin: PE3
dir_pin: PE2
enable_pin: !PE4
rotation_distance: 40
microsteps: 32
endstop_pin: ^!PA15
position_endstop: -7
position_min: -7
position_max: 173
homing_speed: 50

[stepper_y]
step_pin: PE0
dir_pin: PB9
enable_pin: !PE1
rotation_distance: 40
full_steps_per_rotation: 200
microsteps: 32
endstop_pin: ^!PA12
position_endstop: -6
position_min: -6
position_max: 177
homing_speed: 50

[stepper_z]
step_pin: PB5
dir_pin: !PB4
enable_pin: !PB8
rotation_distance: 8
full_steps_per_rotation: 200
microsteps: 32
#endstop_pin: ^!PA11
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0
position_max: 180
position_min: -10 #lets us go lower to adjust the Z offset
position_max: 180
#homing_speed: 10
#homing_retract_dist: 3.0

#[extruder]
#step_pin: PD6
#dir_pin: !PD3
#enable_pin: !PB3
#rotation_distance: 7.711
#full_steps_per_rotation: 200
#microsteps: 32
#max_extrude_only_distance: 150.0
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#heater_pin: PC3
#sensor_type: ATC Semitec 104GT-2
#sensor_pin: PC1
#control: pid
#pid_Kp: 14.669
#pid_Ki: 0.572
#pid_Kd: 94.068
#min_temp: 0
#max_temp: 250
#pressure_advance: 0.08

[extruder]
step_pin: PD6
dir_pin: !PD3
enable_pin: !PB3
microsteps: 32
rotation_distance: 7.355
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB0
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC1
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 250
pressure_advance: 0.051

[fan]
pin: PB1

#[heater_fan my_nozzle_fan]
#pin: PB1
#heater: extruder
#heater_temp: 50.0

[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
control: pid
pid_Kp: 325.10
pid_Ki: 63.35
pid_Kd: 417.10
min_temp: 0
max_temp: 130

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 250
max_accel: 1700
max_accel_to_decel: 850
max_z_velocity: 25
max_z_accel: 100

[static_digital_output display_reset]
pins: !PC6, !PD13

[pause_resume]
recover_velocity: 50

[gcode_arcs]
resolution: 0.1

[display_status]
[pause_resume]

#[gcode_macro PAUSE]
#rename_existing: BASE_PAUSE
#default_parameter_X: 5    #edit to your park position
#default_parameter_Y: 5    #edit to your park position
#default_parameter_Z: 10     #edit to your park position
#default_parameter_E: 0.5      #edit to your retract length
#gcode:
#    SAVE_GCODE_STATE NAME=PAUSE_state
#    BASE_PAUSE
#    G91
#    G1 E-{E} F2100
#    G1 Z{Z}
#    G90
#    G1 X{X} Y{Y} F6000

#[gcode_macro RESUME]
#rename_existing: BASE_RESUME
#default_parameter_E: 0.5      #edit to your retract length
#gcode:
#    G91
#    G1 E{E} F2100
#    G90
#    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
#    BASE_RESUME
    
#[gcode_macro CANCEL_PRINT]
#rename_existing: BASE_CANCEL_PRINT
#gcode:
#    TURN_OFF_HEATERS
#    CLEAR_PAUSE
#    SDCARD_RESET_FILE
#    BASE_CANCEL_PRINT    

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.115
#*# pid_ki = 1.084
#*# pid_kd = 112.784
#*#
#*# [bltouch]
#*# z_offset = 5.470
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.072500, -0.112500, -0.085000, -0.086250, -0.060000, -0.066250
#*# 	  -0.022500, -0.010000, -0.045000, -0.032500, -0.028750, -0.023750
#*# 	  -0.002500, -0.002500, -0.023750, 0.000000, 0.018750, 0.025000
#*# 	  0.002500, -0.017500, -0.037500, -0.031250, 0.010000, 0.000000
#*# 	  -0.096250, -0.095000, -0.126250, -0.113750, -0.112500, -0.078750
#*# tension = 0.2
#*# min_x = 22.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 17.0
#*# x_count = 6
#*# max_y = 163.0
#*# mesh_x_pps = 2
#*# max_x = 163.0
